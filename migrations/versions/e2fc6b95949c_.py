"""empty message

Revision ID: e2fc6b95949c
Revises: ac4c6d0b1554
Create Date: 2021-03-03 14:12:25.115309

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e2fc6b95949c'
down_revision = 'ac4c6d0b1554'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('views',
    sa.Column('view_uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('view_name', sa.Text(), nullable=True),
    sa.Column('view_belongs_to_user', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['view_belongs_to_user'], ['users.user_uid'], ),
    sa.PrimaryKeyConstraint('view_uid')
    )
    op.create_table('fieldsviews',
    sa.Column('fieldview_uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('view_uid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('field_uid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('field_order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['field_uid'], ['fields.field_uid'], ),
    sa.ForeignKeyConstraint(['view_uid'], ['views.view_uid'], ),
    sa.PrimaryKeyConstraint('fieldview_uid')
    )
    op.add_column('data', sa.Column('datum_created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.add_column('data', sa.Column('datum_created_by', postgresql.UUID(as_uuid=True), nullable=True))
    op.drop_constraint('data_created_by_fkey', 'data', type_='foreignkey')
    op.create_foreign_key(None, 'data', 'users', ['datum_created_by'], ['user_uid'])
    op.drop_column('data', 'created_at')
    op.drop_column('data', 'created_by')
    op.add_column('fields', sa.Column('field_created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.add_column('fields', sa.Column('field_created_by', postgresql.UUID(as_uuid=True), nullable=True))
    op.drop_constraint('fields_created_by_fkey', 'fields', type_='foreignkey')
    op.create_foreign_key(None, 'fields', 'users', ['field_created_by'], ['user_uid'])
    op.drop_column('fields', 'created_at')
    op.drop_column('fields', 'created_by')
    op.add_column('trials', sa.Column('trial_created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.add_column('trials', sa.Column('trial_inclusion', sa.VARCHAR(), nullable=True))
    op.add_column('trials', sa.Column('trial_inclusion_note', sa.Text(), nullable=True))
    op.drop_column('trials', 'inclusion')
    op.drop_column('trials', 'created_at')
    op.drop_column('trials', 'inclusion_note')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('trials', sa.Column('inclusion_note', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('trials', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('trials', sa.Column('inclusion', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('trials', 'trial_inclusion_note')
    op.drop_column('trials', 'trial_inclusion')
    op.drop_column('trials', 'trial_created_at')
    op.add_column('fields', sa.Column('created_by', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('fields', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'fields', type_='foreignkey')
    op.create_foreign_key('fields_created_by_fkey', 'fields', 'users', ['created_by'], ['user_uid'])
    op.drop_column('fields', 'field_created_by')
    op.drop_column('fields', 'field_created_at')
    op.add_column('data', sa.Column('created_by', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('data', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'data', type_='foreignkey')
    op.create_foreign_key('data_created_by_fkey', 'data', 'users', ['created_by'], ['user_uid'])
    op.drop_column('data', 'datum_created_by')
    op.drop_column('data', 'datum_created_at')
    op.drop_table('fieldsviews')
    op.drop_table('views')
    # ### end Alembic commands ###
